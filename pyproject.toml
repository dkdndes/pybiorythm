[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "biorythm"
dynamic = ["version"]
description = "A Python library for biorhythm calculations"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [
    {name = "Peter Rosemann", email = "dkdndes@gmail.com"},
]
maintainers = [
    {name = "Peter Rosemann", email = "dkdndes@gmail.com"},
]
keywords = ["biorhythm", "biology", "cycles", "health"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "bokeh>=3.4.3",
    "jupyter>=1.1.1",
    "matplotlib>=3.9.4",
    "nbconvert>=7.16.6",
    "numpy>=1.20.0",
    "pandas>=2.3.1",
    "plotly>=6.2.0",
    "scipy>=1.13.1",
    "seaborn>=0.13.2",
    "statsmodels>=0.14.5",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pandas>=2.0.3",
]

[project.urls]
Homepage = "https://github.com/dkdndes/pybiorythm"
Repository = "https://github.com/dkdndes/pybiorythm"
Issues = "https://github.com/dkdndes/pybiorythm/issues"

[dependency-groups]
dev = [
    "bandit[toml]>=1.7.10",
    "build>=1.2.2.post1",
    "cyclonedx-bom>=7.0.0",
    "pandas>=2.0.3",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=5.0.0",
    "python-semantic-release>=8.0.0",
    "ruff>=0.12.7",
    "safety>=3.6.0",
    "setuptools-scm>=8.3.1",
    "twine>=6.1.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.16",
    "mkdocs-mermaid2-plugin>=1.2.1",
]

[tool.setuptools.packages.find]
include = ["biorythm*"]
exclude = ["tests*", "site*", "docs*"]

[tool.setuptools_scm]
write_to = "biorythm/_version.py"

[tool.semantic_release]
build_command = "uv lock && uv build"
dist_path = "dist/"
upload_to_vcs_release = true
version_toml = [
    "pyproject.toml:project.version"
]
major_on_zero = true
tag_format = "v{version}"
commit_message = "release: v{version}"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.develop]
match = "develop" 
prerelease = true
prerelease_token = "a"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
token = { env = "GITHUB_TOKEN" }

