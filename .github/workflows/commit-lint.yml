name: Commit Lint

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  commit-lint:
    name: Conventional Commits
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install commitlint
      run: |
        npm install --save-dev @commitlint/cli @commitlint/config-conventional

    - name: Create commitlint config
      run: |
        cat > .commitlintrc.json << 'EOF'
        {
          "extends": ["@commitlint/config-conventional"],
          "rules": {
            "type-enum": [
              2,
              "always",
              [
                "build",
                "chore", 
                "ci",
                "docs",
                "feat",
                "fix",
                "perf",
                "refactor",
                "revert",
                "style",
                "test"
              ]
            ],
            "subject-case": [2, "never", ["start-case", "pascal-case"]],
            "subject-empty": [2, "never"],
            "subject-full-stop": [2, "never", "."],
            "type-empty": [2, "never"],
            "scope-case": [2, "always", "lower-case"]
          }
        }
        EOF

    - name: Validate current commit (push)
      if: github.event_name == 'push'
      run: |
        echo "Validating commit: ${{ github.event.head_commit.message }}"
        echo "${{ github.event.head_commit.message }}" | npx commitlint

    - name: Validate PR commits
      if: github.event_name == 'pull_request'
      run: |
        npx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.event.pull_request.head.sha }} --verbose

    - name: Comment PR with commit format help
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const body = `
          ## ❌ Commit Message Format Issue
          
          Your commits don't follow the conventional commit format. Please use the following format:
          
          \`\`\`
          <type>[optional scope]: <description>
          
          [optional body]
          
          [optional footer(s)]
          \`\`\`
          
          ### Valid Types:
          - **feat**: A new feature
          - **fix**: A bug fix  
          - **docs**: Documentation only changes
          - **style**: Changes that do not affect the meaning of the code
          - **refactor**: A code change that neither fixes a bug nor adds a feature
          - **perf**: A code change that improves performance
          - **test**: Adding missing tests or correcting existing tests
          - **build**: Changes that affect the build system or external dependencies
          - **ci**: Changes to CI configuration files and scripts
          - **chore**: Other changes that don't modify src or test files
          
          ### Examples:
          \`\`\`
          feat: add user authentication
          fix: resolve memory leak in calculator
          docs: update installation instructions
          test: add unit tests for date validation
          chore: update dependencies
          \`\`\`
          
          ### Semantic Versioning Impact:
          - **feat**: Creates a MINOR version bump (0.1.0 → 0.2.0)
          - **fix, perf**: Creates a PATCH version bump (0.1.0 → 0.1.1)
          - **BREAKING CHANGE** in footer: Creates a MAJOR version bump (0.1.0 → 1.0.0)
          
          Please fix your commit messages and force-push to update this PR.
          `;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });