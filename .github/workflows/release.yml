name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows: ["Semantic Release"]
    types:
      - completed

permissions:
  contents: write
  packages: write

jobs:
  # Job 1: Create GitHub Release
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install UV
      uses: astral-sh/setup-uv@v2

    - name: Install dependencies and build
      run: |
        uv pip install --system build twine
        uv pip install --system -e .

    - name: Build package
      run: python -m build

    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Generate changelog from commits since last tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"* %s (%an)" $PREVIOUS_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"* %s (%an)" HEAD)
        fi
        
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Create changelog file
        cat > CHANGELOG.md << EOF
        # Release $VERSION
        
        ## Changes
        $CHANGELOG
        
        ## Installation
        
        ### PyPI
        \`\`\`bash
        pip install pybiorythm==$VERSION
        \`\`\`
        
        ### Docker
        \`\`\`bash
        docker pull ghcr.io/dkdndes/pybiorythm:$VERSION
        docker run -it ghcr.io/dkdndes/pybiorythm:$VERSION
        \`\`\`
        
        ### From Source
        \`\`\`bash
        git clone https://github.com/dkdndes/pybiorythm.git
        cd pybiorythm
        git checkout v$VERSION
        pip install -e .
        \`\`\`
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: CHANGELOG.md
        files: |
          dist/*.whl
          dist/*.tar.gz
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

  # Job 2: Publish to PyPI
  pypi-publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: github-release
    environment: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install UV
      uses: astral-sh/setup-uv@v2

    - name: Install build dependencies
      run: |
        uv pip install --system build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish to TestPyPI first
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true

    - name: Test installation from TestPyPI
      run: |
        sleep 60  # Wait for package to be available
        pip install --index-url https://test.pypi.org/simple/ \
                    --extra-index-url https://pypi.org/simple/ \
                    pybiorythm
        python -c "import biorythm; print('TestPyPI installation successful!')"

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  # Job 3: Update Documentation
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [github-release, pypi-publish]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update version badges in README
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Update PyPI version badge
        sed -i "s|pip install pybiorythm|pip install pybiorythm==$VERSION|g" README.md
        
        # Update Docker image references
        sed -i "s|ghcr.io/dkdndes/pybiorythm:latest|ghcr.io/dkdndes/pybiorythm:$VERSION|g" README.md
        
        echo "Updated README.md with version $VERSION"

    - name: Commit documentation updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git diff --staged --quiet || git commit -m "Update documentation for release ${GITHUB_REF#refs/tags/}"
        git push origin main

  # Job 4: Post-release validation
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    needs: [github-release, pypi-publish]
    
    steps:
    - name: Wait for PyPI propagation
      run: sleep 120

    - name: Test PyPI installation
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        pip install pybiorythm==$VERSION
        python -c "
        import biorythm
        from datetime import datetime
        calc = biorythm.BiorhythmCalculator()
        result = calc.calculate_biorhythm_values(datetime(1990, 5, 15), datetime(2023, 6, 1))
        print('PyPI release validation passed!')
        print(f'Version: {biorythm.__version__ if hasattr(biorythm, \"__version__\") else \"N/A\"}')
        print(f'Result: {result}')
        "

    - name: Test Docker image
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        docker run --rm ghcr.io/dkdndes/pybiorythm:$VERSION python -c "
        import biorythm
        from datetime import datetime
        calc = biorythm.BiorhythmCalculator()
        result = calc.calculate_biorhythm_values(datetime(1990, 5, 15), datetime(2023, 6, 1))
        print('Docker release validation passed!')
        print(f'Result: {result}')
        "