name: Python Semantic Release

on:
  push:
    branches: [develop, main]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.get_version.outputs.version }}
      tag: ${{ steps.get_version.outputs.tag }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --dev
          uv pip install python-semantic-release

      - name: Configure Git
        run: |
          git config --global user.name "semantic-release"
          git config --global user.email "semantic-release@users.noreply.github.com"

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.14.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "semantic-release"
          git_committer_email: "semantic-release@users.noreply.github.com"

      - name: Get version info
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          VERSION=${LATEST_TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Publish Python package to GitHub Packages
        if: steps.release.outputs.released == 'true'
        run: |
          # Configure pip to use GitHub Packages
          echo "[distutils]" > ~/.pypirc
          echo "index-servers = github" >> ~/.pypirc
          echo "" >> ~/.pypirc
          echo "[github]" >> ~/.pypirc
          echo "repository = https://upload.pypi.org/legacy/" >> ~/.pypirc
          echo "username = __token__" >> ~/.pypirc
          echo "password = ${{ secrets.GITHUB_TOKEN }}" >> ~/.pypirc
          
          # Upload to GitHub releases (already handled by semantic-release)
          echo "Package artifacts uploaded to GitHub release by semantic-release"
          
          # Upload to GitHub Packages via API (optional - for package registry)
          if [ -f dist/*.whl ]; then
            echo "Built packages found in dist/"
            ls -la dist/
          fi

  docker-build:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.released == 'true'
    
    steps:
      - name: Trigger Docker Build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-publish.yml',
              ref: context.ref.replace('refs/heads/', '')
            });

