[pytest]
minversion = 8.0

# Keep collection constrained to your real test suite (prevents picking up docs/site duplicates)
testpaths =
    tests

# Use safer import mode to avoid path-prepend collisions

# Don’t recurse into docs, built assets, or example trees
norecursedirs =
    .git
    .venv
    venv
    build
    dist
    docs
    site
    examples
    */__pycache__/*

python_files = test_*.py
python_classes = Test*
python_functions = test_*

addopts =
    -v
    -ra
    --tb=short
    --strict-config
    --strict-markers
    --color=yes
    --cov=biorythm
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=85

# Central marker registry (we’ll start tagging tests next)
markers =
    unit: fast, pure-Python unit tests
    integration: crosses module boundaries / touches filesystem or time
    e2e: CLI/API end-to-end behavior
    notebook: validates example notebooks
    examples: validates code under docs/site/examples
    slow: long-running tests (>1s)
    network: requires internet access
    benchmark: performance/throughput assertions
    regression: pinned tests for fixed bugs
    serial: must not run concurrently
    flaky: non-deterministic; usually paired with reruns
    json: JSON/analytics tests

# Optional: tighten warnings so new deprecations fail CI
filterwarnings =
    error::DeprecationWarning:biorythm.*
    ignore::DeprecationWarning:jupyter_client.*
    ignore::UserWarning:matplotlib.*

[coverage:run]
branch = True
source =
    biorythm
omit =
    setup.py
    */tests/*
    */docs/*
    */site/*
    */site-packages/*
    */__pycache__/*

[coverage:report]
show_missing = True
precision = 2
exclude_lines =
    pragma: no cover
    def __repr__
    if __name__ == "__main__":
    raise AssertionError
    raise NotImplementedError
    if 0:
    if False:
